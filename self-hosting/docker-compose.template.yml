version: '3'

services:
  ags-proxy:
    image: caddy:2-alpine
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ags-proxy-data:/data
      - ags-proxy-config:/config
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      ags-dashboard:
        condition: service_healthy
      ags-api:
        condition: service_healthy

  ags-db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - ags-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # Uncomment to expose ports
    # ports:
    #   - 5432:5432

  ags-kv:
    image: redis:7.2.5-alpine
    restart: always
    volumes:
      - ags-kv-data:/data
    command: [ 'redis-server', '--maxmemory-policy', 'noeviction' ]
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli ping' ]
      interval: 10s
      timeout: 5s
      retries: 5
    # Uncomment to expose ports
    # ports:
    #   - 6379:6379

  ags-ch:
    image: clickhouse/clickhouse-server:24.3.2-alpine
    restart: always
    volumes:
      - ags-ch-data:/var/lib/clickhouse
      - ags-ch-logs:/var/log/clickhouse-server
      - ./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/op-config.xml:ro
      - ./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/op-user-config.xml:ro
      - ./clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    healthcheck:
      test: [ 'CMD-SHELL', 'clickhouse-client --query "SELECT 1"' ]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  ags-api:
    image: ags-analytics/openpanel-api:latest
    restart: always
    command: >
      sh -c "
        echo 'Running migrations...'
        CI=true pnpm -r run migrate:deploy

        pnpm start
      "
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -f http://localhost:3000/healthcheck || exit 1' ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      ags-db:
        condition: service_healthy
      ags-ch:
        condition: service_healthy
      ags-kv:
        condition: service_healthy
    env_file:
      - .env

  ags-dashboard:
    image: ags-analytics/openpanel-dashboard:latest
    restart: always
    depends_on:
      ags-api:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -f http://localhost:3000/api/healthcheck || exit 1' ]
      interval: 10s
      timeout: 5s
      retries: 5

  ags-worker:
    image: ags-analytics/openpanel-worker:latest
    restart: always
    depends_on:
      ags-api:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -f http://localhost:3000/healthcheck || exit 1' ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: $OP_WORKER_REPLICAS

volumes:
  ags-db-data:
    driver: local
  ags-kv-data:
    driver: local
  ags-ch-data:
    driver: local
  ags-ch-logs:
    driver: local
  ags-proxy-data:
    driver: local
  ags-proxy-config:
    driver: local
